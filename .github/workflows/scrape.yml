name: Scrape Craigslist -> Supabase

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */4 * * *" # every 4 hours UTC

concurrency:
  group: scrape-${{ github.ref }}
  cancel-in-progress: false

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      # Craigslist often blocks; try but don't fail the job
      - name: Craigslist (best-effort; ignore failure)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          CITY: Calhoun
        run: node scripts/scrape_craigslist.mjs || echo "craigslist blocked; continuing"

      # OfferUp is our primary source
      - name: OfferUp (primary)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          CITY: Calhoun
        run: node scripts/scrape_offerup.mjs

      # eBay as secondary; item-page fetch
      - name: eBay (secondary)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          CITY: Calhoun
        run: node scripts/scrape_ebay.mjs || echo "ebay failed; continuing"

      # ðŸ”§ Normalize titles into structured fields
      - name: Normalize listings (material/shape/thickness)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
        run: node scripts/normalize_listings.mjs
